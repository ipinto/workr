#!/usr/bin/env bash
set -euo pipefail
ROOT="$(realpath "$(dirname "${BASH_SOURCE[0]}")"/..)"
cd "${ROOT}"

USER="sirikon"
REPO="workr"
TEMP_FOLDER="./tmp"

function main {
    create-temp-folder

    build-workr

    TAR_PACKAGE_FILE="${TEMP_FOLDER}/workr-$(get-builded-version)-linux-amd64.tar.gz"
    DEB_PACKAGE_FILE="${TEMP_FOLDER}/workr-$(get-builded-version)-linux-amd64.deb"

    package-tar
    package-deb

    if [ ! "${1:-""}" = "--dry-run" ]; then
        create-release
        upload-file "${TAR_PACKAGE_FILE}"
        upload-file "${DEB_PACKAGE_FILE}"
        remove-temp-folder
    fi
}

function build-workr {
    log "Building Workr..."
    ./scripts/build-static
    mkdir -p /bin
    rm -rf ./bin/*
    cp ./docker/out/workr ./bin/workr
    new-line
}

function get-builded-version {(
    cd "${ROOT}"
    tr -d '\n' < ./docker/out/version
)}

function package-tar {
    log "Packaging into .tar.gz file"
    (
        cd ./bin
        tar --create --gzip --file "../${TAR_PACKAGE_FILE}" *
    )
    new-line
}

function package-deb {(
    log "Packaging into deb file"
    mkdir -p pkg/deb/workr/usr/bin/
    cp ./bin/* pkg/deb/workr/usr/bin/
    (
        cd pkg/deb
        mkdir -p workr/DEBIAN
        export VERSION=$(get-builded-version)
        envsubst < assets/control > workr/DEBIAN/control
        dpkg-deb --build workr
        mv ./workr.deb "../../${DEB_PACKAGE_FILE}"
    )
    new-line
)}

function create-release {
    log "Creating release"
    github-release release \
        --user "${USER}" \
        --repo "${REPO}" \
        --tag "v$(get-builded-version)" \
        --name "Workr $(get-builded-version)"
    new-line
}

function upload-file {
    file="$1"
    fileName="$(basename ${file})"
    printf "Uploading ${fileName}..."
    github-release upload \
        --user "${USER}" \
        --repo "${REPO}" \
        --tag "v$(get-builded-version)" \
        --name "${fileName}" \
        --file "${file}"
    printf " OK\n"
}

function create-temp-folder {
    remove-temp-folder
    mkdir -p "${TEMP_FOLDER}"
}

function remove-temp-folder {
    rm -rf "${TEMP_FOLDER}"
}

function log {
    printf "## %s\n" "$1"
}

function new-line {
    printf "\n"
}

main "$@"
